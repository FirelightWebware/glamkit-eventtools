"""
Occurrences can be generated by a Generator. An event can have many Generators.

A Generator has event, start datetime, end datetime, rule, repeat_until, and 'exceptions'.

exceptions is a JSONfield of start/end datetime pairs that the generator skips over if it was about to generate them.

A generator generates occurrences by by repeating start/end datetimes according to the rule, until repeat_until is about to be exceeded.

A generator without a rule generates one occurrence.

If the start time of a generator is time.min and the end time is time.max, then the generator generates all_day occurrences.

If the start time of a generator is time.min and the end time is time.max and the repetition rule is hourly, then the generator generates one all_day occurrences followed by (e.g. 23 timed occurrences).

Occurrences are saved to the database.

If a generated occurrence exists in the database already, it is not overwritten.

It is not valid to have a repeat_until without a rule.

(We need a special admin widget for entering the datetimes.)

If repeat_until is omitted (and rule is set) then repetitions are created upto a preset period into the future. The preset is in settings.

(This preset period is continually updated)

Every time a generator is saved, it does its generating.

Every time an event is saved, generators with a rule and no repeat_until do their generating.

Occurrences are saved to the database, and have an FK to the generator that did so. The FK can be set to None so that an occurrence can be detatched from a generator.

When you change a generator and update existing occurrences:
  * we update the times of occurrences and exceptions to match the generator's times.
  * we generate occurrences as normal.

This means that data is never lost except through an actual delete.

If an occurrence is deleted, that occurrence's datetimes are added to the generator's exceptions. That prevents deleted occurrences from being regenerated.

If an occurrence's generator FK is changed, that occurrence is added as an exception to the generator. That prevents reassigned/detatched occurrences from being regenerated.

If the generator's datetimes are modified, it is possible to update occurrence datetimes (where unmodified).
And exception datetimes.
If the generator's dates are modified, it is possible to update occurrence dates (where unmodified).
And exception dates.
If the generator's times are modified, it is possible to update occurrence times (where unmodified).
And exception times.
If the generator is modified from being all-day to not all-day, it is possible to update (trivially).
And exceptions.
If the generator is modified from being not all-day to all-day, it is possible to update (trivially).
And exceptions.

If a generator's rule is changed, then no times are changed (unless as above), and no occurrences are deleted but any 'extra' occurrences are still generated.

If a generator's repeat until value is changed then then no times are changed (unless as above), and no occurrences are deleted, but any 'extra' occurrences are still generated.
  
 
"""